plugins {
    id 'com.android.application'
}

apply from: 'morpheus.gradle'


/*
def assetDir = "assets"
def properties = new Properties()
if (project.rootProject.file('local.properties').exists()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    assetDir = properties.getProperty("asset.dir", "assets")
}
*/



android {
    compileSdk 33
    defaultConfig {
        // Sync Your License
        applicationId "com.baeoom.smart"
        minSdk 19
        targetSdk 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            assets.srcDirs = ['../../assets', './src/main/assets']
            jniLibs {
                srcDir 'libs'
            }
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }



    packagingOptions {
        exclude "META-INF/LICENSE"
        exclude "META-INF/DEPENDENCIES"
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    if (KEYSTORE_PATH?.trim()) {
        signingConfigs{
            releaseWithSignedKey {
                storeFile file(KEYSTORE_PATH)
                storePassword KEYSTORE_PW
                keyAlias KEYSTORE_ALIAS
                keyPassword KEYSTORE_ALIAS_PW
            }
        }
    }

    buildTypes {
        release {
            //minifyEnabled true
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'morpheus_proguard-project.txt'
            if (KEYSTORE_PATH?.trim()) {
                signingConfig signingConfigs.releaseWithSignedKey
            }
        }
    }
}



dependencies {
    /**
     * ==============================================================
     * 외부라이브러리 적용시  [example.aar file 을 libs 폴더에 위치]
     *  implementation fileTree(dir: 'libs', include: 'example.aar')
     * ===============================================================
     */
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

}


import org.apache.tools.ant.taskdefs.condition.Os

task  AppRunDebug (type: Exec, dependsOn: 'installDebug') {
    def packageName = android.defaultConfig.applicationId
    def launcherActivity = packageName + '/' + 'mcore.mobile.app.Startup'
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {

        commandLine 'cmd', '/c', android.getAdbExe().toString(), 'shell', 'am', 'start', '-n', launcherActivity
    }
    else if (Os.isFamily(Os.FAMILY_MAC)) {
        commandLine android.getAdbExe().toString(), "shell", 'am', 'start', '-n', launcherActivity
    }
}

